@model viacinema.ViewModels.MoreInfoViewModel

@{
    ViewData["Title"] = "Movie Specifics";
}

@using viacinema.Models

<h2>Specifics</h2>
@{
    Movie movie = @Model.Movie;
}
<h3 class="movie-title">@movie.Title</h3>
<div class="movie-content">
    <img class="movie-image" src="@movie.ImageUrl" />
    <div class="movie-info">
        <p class="movie-description"><b>Description:</b> @movie.Description</p>
        <p class="movie-genre"><b>Genre:</b> @movie.Genre</p>
        <p class="movie-rating"><b>Rating:</b> @movie.Rating</p>
    </div>
</div>
<div class="screenings">
    <ul>
        @{ foreach (Screening screening in @Model.Screenings)
            {
                <li class="screening-container">
                    <div class="screening-content">
                        <p class="screening-time">
                            <b>Date and Time: </b>@screening.StartTime
                            &nbsp;&nbsp;<b>Duration: </b> @{int hours = movie.DurationInSeconds / 3600;} @hours <b>:</b> @{int minutes = (movie.DurationInSeconds % 3600) / 60;} @minutes
                            <b>&nbsp;&nbsp;Screen Type:</b> @screening.ScreenType
                            @*<input class="book-button" type="button" value="Book" />*@
                            <button type="button" class="btn btn-primary book-button" data-screening=@screening.Id data-toggle="modal" data-target="#reserveSeatModal">
                                Book
                            </button>
                    </div>
                </li>
            }
        }
    </ul>
</div>

<!-- Modal -->
<div class="modal fade" id="reserveSeatModal" tabindex="-1" role="dialog" aria-labelledby="reserveSeatModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="reserveSeatModalLabel">Reserve Seat</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="container">
                    <div class="row">
                        <div class="col-3">

                        </div>
                        <div class="col-6" id="booking-screenType">
                            Room #: <span class="room-number"></span>
                        </div>
                        <div class="col-3">

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-10">
                            Screen Type: <span class="screen-type"></span>
                        </div>
                    </div>

                    @*TABLE/SEAT RESERVATION GRID*@

                    Seat grid here
                    <div class="table-responsive">
                        <table class="table table-bordered">
                            <thead>
                            </thead>

                            <tbody class="seat-grid"></tbody>
                        </table>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button id="continue-button" type="button" class="btn btn-primary">Continue</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts
    {
    <script>
        var selectedSeat = -1;
        var _seats = null;
        var selectedScreening = -1;

        function updateTable(seats) {
            var html = "";

            const rows = seats.length / 10;
            for (var i = 0; i < seats.length; i++) {
                var el = "";
                if (i == 0) {
                    el += "<tr>";
                }
                else if (i % 10 == 0 && i != seats.length - 1) {
                    el += "</tr><tr>";
                }
                const seat = seats[i];
                var className = seat.occupied ? "red" : "green";
                if (i == selectedSeat) {
                    className += " selected";
                }
                el += "<td class='" + className + " seat-cell' data-seat-no = " + seat.seatNo + ">" + seat.seatNo + " </td>";
                if (i == seats.length - 1) {
                    el += "</tr>";
                }
                html += el;
            }
            $('.seat-grid').html(html);
        }


        $(".book-button").on("click", function () {
            var screeningID = $(this).attr("data-screening");
            selectedScreening = screeningID;
            $.ajax({
                url: "/api/screenings/" + screeningID,
                method: "GET",
                success: function (screening) {
                    $('.room-number').text(screening.roomNo);
                    $('.screen-type').text(screening.screenType);
                    $.ajax({
                        url: "/api/seats/seatsroom/" + screening.roomNo,
                        method: "GET",
                        success: function (seats) {
                            updateTable(seats);
                            _seats = seats;
                            $(".seat-cell").on("click", function () {
                                var seatNo = $(this).attr("data-seat-no");
                                selectedSeat = seatNo;
                                console.log(seatNo);
                                updateTable(_seats);
                            });
                        }
                    });
                }
            });
        });

        document.getElementById("continue-button").onclick = function () {
            location.href = "payment/?seat=" + selectedSeat + "&screening=" + selectedScreening;
        };
    </script>
}

<style>
    .table-responsive {
        max-width: 550px;
    }

    td {
        color: white;
        text-align: center;
    }

        td:hover {
            opacity: .7;
        }

        td.green {
            cursor: pointer;
            background: #48c348;
        }

        td.red {
            background: #bb1818;
            cursor: not-allowed;
        }

        td.selected {
            background: #337ab7;
        }

    .modal-footer {
        max-width: 550px;
    }
</style>